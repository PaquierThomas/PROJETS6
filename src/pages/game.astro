<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Interactive Story</title>
    <style>
      body {
        font-family: "Source Sans Pro", sans-serif;
        margin: 0;
        padding: 0;
        background-image: url("/images/noise.webp");
        background: #181930;
        color: #ffffff;
      }
      .container {
        display: flex;
        justify-content: center;
        align-items: flex-start;
        padding-left: 5%;
        padding-top: 7%;
        overflow: hidden;
        height: 100vh;
      }

      .row {
        display: flex;
        flex-direction: row;
        justify-content: flex-start;
        gap: 20px;
        margin-top: 2%;
      }

      .square {
        width: 350px;
        height: 350px;
        border: 2px solid rgba(95, 73, 50, 0.6);
        border-radius: 5px;
        display: flex;
        flex-direction: column;
        justify-content: flex-end;
        background: #372f26;
        cursor: pointer;
      }

      .inner-square {
        width: 80%;
        height: 80%;
        padding: 10%;
        padding-bottom: 2%;
        display: flex;
        justify-content: center;
        align-items: center;
      }

      .inner-square img {
        max-width: 100%;
        max-height: 100%;
      }

      .text {
        display: flex;
        align-items: center;
        justify-content: flex-start;
        padding-left: 10px;
        padding-bottom: 5px;
        gap: 5px;
        color: rgb(201, 178, 153);
        font-family: "Source Sans Pro", sans-serif;
      }

      .text span {
        font-size: 18px;
        line-height: 1.1;
        font-weight: bold;
        background: #262421;
        padding: 2px 7px;

        border: 1px solid rgba(95, 73, 50, 0.6);
        border-radius: 5px;
      }

      .text h2 {
        font-size: 18px;
        font-weight: normal;
        margin: 0;
      }
      .partie-texte {
        color: #e4dad1;
        font-family: var(--font-source);
        line-height: 32px;
        font-size: 24px;
        width: 850px;
        height: 50px;
      }
      .titre {
        display: flex;
        flex-direction: row;
        align-items: flex-start;
        gap: 10px;
      }
      .index {
        font-size: 24px;

        color: #e4dad1;
      }
      .index-fleche {
        display: flex;
        align-items: center;
      }
      svg {
        color: #e4dad1;
        stroke-width: 3px;
      }
    </style>
  </head>
  <body class="container">
    <div class="partie">
      <div class="titre">
        <div class="index-fleche">
          <p class="index">1</p>
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width="24"
            height="24"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"
          >
            <path d="M5 12h13M12 5l7 7-7 7"></path>
          </svg>
        </div>

        <p class="partie-texte"></p>
      </div>
      <div class="row">
        <!-- Les cartes seront ajoutées ici -->
      </div>
    </div>

    <script>
      let choixCount = 1; // Variable to store the number of choices made, initialized to 1
      let choixPris = []; // Tableau pour stocker les IDs des choix pris

      function choisirChoix(partieId, choixId) {
        // Récupérer les données de l'API
        fetch(`http://localhost:4000/api/histoire/${partieId}/choix/${choixId}`)
          .then((response) => {
            if (!response.ok) {
              throw new Error("Network response was not ok");
            }
            return response.json();
          })
          .then((data) => {
            console.log("Données reçues de l'API :", data);

            document.querySelector(".partie-texte").textContent = data.texte;

            const choixContainer = document.querySelector(".row");
            choixContainer.innerHTML = "";

            if (data.choix && data.choix.length > 0) {
              console.log("Ajout des choix :", data.choix);
              data.choix.forEach((choix, index) => {
                console.log("Traitement du choix :", choix);
                const card = document.createElement("div");
                card.classList.add("square");
                card.style.border = "2px solid rgba(76, 73, 70, 0.6)";
                card.style.borderRadius = "5px";
                card.style.display = "flex";
                card.style.flexDirection = "column";
                card.style.justifyContent = "flex-end";
                card.style.backgroundColor = "#21233B";
                card.style.marginTop = "6%";
                card.style.width = "400px";
                card.style.height = "400px";
                card.style.cursor = "pointer";
                card.style.transition = "all 0.3s ease-in-out";
                card.style.backgroundImage = "url('/images/noise.webp')";

                const innerSquare = document.createElement("div");
                innerSquare.classList.add("inner-square");
                innerSquare.style.width = "80%";
                innerSquare.style.height = "80%";
                innerSquare.style.padding = "10%";
                innerSquare.style.paddingBottom = "2%";
                innerSquare.style.display = "flex";
                innerSquare.style.justifyContent = "center";
                innerSquare.style.alignItems = "center";
                innerSquare.style.transition = "all 0.3s ease-in-out";

                const image = document.createElement("img");
                image.src = `/images/symbols/story/${choix.image_url}`;
                image.alt = "";
                image.style.maxWidth = "65%";
                image.style.maxHeight = "65%";

                innerSquare.appendChild(image);
                card.appendChild(innerSquare);

                const textContainer = document.createElement("div");
                textContainer.classList.add("text");
                textContainer.style.display = "flex";
                textContainer.style.alignItems = "center";
                textContainer.style.justifyContent = "flex-start";
                textContainer.style.paddingLeft = "10px";
                textContainer.style.paddingBottom = "5px";
                textContainer.style.gap = "5px";
                textContainer.style.color = "#e4dad1";
                textContainer.style.fontFamily = "Source Sans Pro, sans-serif";
                textContainer.style.transition = "all 0.15s ease-in-out";

                const span = document.createElement("span");
                span.textContent = String.fromCharCode(65 + index);
                span.style.fontSize = "18px";
                span.style.lineHeight = "1.1";
                span.style.fontWeight = "bold";
                span.style.background = "#1b1b1b";
                span.style.padding = "2px 7px";
                span.style.border = "1px solid rgba(76, 73, 70, 0.6)";
                span.style.borderRadius = "5px";
                span.style.transition = "all 0.15s ease-in-out";

                card.addEventListener("mouseenter", function () {
                  // Apply styles when mouse enters
                  span.style.color = "white";
                  span.style.background = "#cd412b";
                  span.style.border = "none";
                  textContainer.style.color = "#cd412b";

                  card.style.border = "2px solid #cd412b";
                  card.style.transform = "translateY(-5px)";
                });

                // Add event listener for mouse leaving the element
                card.addEventListener("mouseleave", function () {
                  // Apply styles when mouse leaves
                  span.style.color = "#e4dad1";
                  span.style.background = "#1b1b1b";
                  span.style.border = "1px solid rgba(76, 73, 70, 0.6)";
                  textContainer.style.color = "#e4dad1";

                  card.style.border = "2px solid rgba(76, 73, 70, 0.6)";
                  card.style.transform = "translateY(0)";
                });

                const h2 = document.createElement("h2");
                h2.textContent = choix.texte;
                h2.style.fontSize = "18px";
                h2.style.fontWeight = "normal";
                h2.style.margin = "0";

                textContainer.appendChild(span);
                textContainer.appendChild(h2);

                card.appendChild(textContainer);
                choixContainer.appendChild(card);

                card.addEventListener("click", () => {
                  if (choix.fin_jeu === 1) {
                    // Si le choix mène à la fin du jeu
                    console.log("Le choix mène à la fin du jeu");
                    choixPris.push(choix.id); // Utiliser choix.id pour obtenir l'identifiant du choix
                    ajouterPartieAHistorique(partieId, choixPris);
                    // Vous pouvez également rediriger l'utilisateur vers une autre page
                    localStorage.setItem(
                      "choixFinalId",
                      choix.prochain_partie_id
                    );
                    window.location.href = "/fin-jeu";
                  } else {
                    // Si le choix ne mène pas à la fin du jeu
                    console.log("Le choix ne mène pas à la fin du jeu");
                    choixCount++; // Increment the number of choices made
                    document.querySelector(".index").textContent =
                      `${choixCount}`; // Update the index paragraph
                    choisirChoix(choix.prochain_partie_id, index);
                    // localStorage.setItem("choixFinalId", partieId);
                    console.log("choixFinalId", choix.prochain_partie_id);
                    choixPris.push(choix.id); // Utiliser choix.id pour obtenir l'identifiant du choix
                  }
                });
              });
            } else {
              console.log("Aucun choix disponible.");
            }
          })
          .catch((error) => {
            console.error(
              "Erreur lors de la récupération de la partie suivante de l'histoire :",
              error
            );
          });
      }

      document.addEventListener("DOMContentLoaded", () => {
        // Récupérer le premier texte et choix pour commencer l'histoire
        choisirChoix(1, 0);
      });

      // Fonction pour vérifier si l'utilisateur est connecté
      async function checkUserAuthentication() {
        try {
          console.log("Vérification de l'authentification de l'utilisateur...");
          const response = await fetch(
            "http://localhost:4000/api/verify-login",
            {
              credentials: "include",
            }
          );
          console.log("Réponse reçue :", response);
          const data = await response.json();
          console.log("Données reçues :", data);

          if (response.ok) {
            console.log("L'utilisateur est connecté !");
            // Appeler la fonction pour ajouter la partie à l'historique
            ajouterPartieAHistorique(partieId);
          } else {
            console.error(
              "L'utilisateur n'est pas authentifié :",
              data.message
            );
            // Rediriger l'utilisateur vers la page de connexion
            window.location.href = "/connexion.html";
          }
        } catch (error) {
          console.error(
            "Erreur lors de la vérification de l'authentification :",
            error
          );
        }
      }

      // Fonction pour ajouter une partie à l'historique
      async function ajouterPartieAHistorique(partieId, choix) {
        try {
          console.log("Tentative d'ajout de la partie à l'historique...");
          console.log("Choix pris :", choix);

          // Convertir le tableau en chaîne JSON
          const choixJSON = JSON.stringify(choix);

          const response = await fetch(
            "http://localhost:4000/api/ajouter-partie-historique",
            {
              method: "POST",
              headers: {
                "Content-Type": "application/json",
              },
              body: JSON.stringify({
                partie_id: partieId,
                choix: choixJSON, // Utiliser la chaîne JSON ici
              }),
              credentials: "include",
            }
          );

          if (!response.ok) {
            throw new Error(
              "Erreur lors de l'ajout de la partie à l'historique"
            );
          }

          console.log("Partie ajoutée à l'historique avec succès !");
        } catch (error) {
          console.error(
            "Erreur lors de l'ajout de la partie à l'historique :",
            error
          );
        }
      }

      // Appeler la fonction pour vérifier l'authentification de l'utilisateur avant d'ajouter la partie à l'historique
      checkUserAuthentication();
    </script>
  </body>
</html>
