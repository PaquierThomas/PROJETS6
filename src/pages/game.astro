<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Interactive Story</title>
    <style>
      body {
        font-family: "Source Sans Pro", sans-serif;
        margin: 0;
        padding: 0;
      }
      .container {
        display: flex;
        justify-content: center;
        align-items: flex-start;
        padding-left: 5%;
        padding-top: 7%;
        overflow: hidden;
        height: 100vh;
        background: #262421;
      }

      .row {
        display: flex;
        flex-direction: row;
        justify-content: flex-start;
        gap: 20px;
        margin-top: 2%;
      }

      .square {
        width: 350px;
        height: 350px;
        border: 2px solid rgba(95, 73, 50, 0.6);
        border-radius: 5px;
        display: flex;
        flex-direction: column;
        justify-content: flex-end;
        background: #372f26;
        cursor: pointer;
      }

      .inner-square {
        width: 80%;
        height: 80%;
        padding: 10%;
        padding-bottom: 2%;
        display: flex;
        justify-content: center;
        align-items: center;
      }

      .inner-square img {
        max-width: 100%;
        max-height: 100%;
      }

      .text {
        display: flex;
        align-items: center;
        justify-content: flex-start;
        padding-left: 10px;
        padding-bottom: 5px;
        gap: 5px;
        color: rgb(201, 178, 153);
        font-family: "Source Sans Pro", sans-serif;
      }

      .text span {
        font-size: 18px;
        line-height: 1.1;
        font-weight: bold;
        background: #262421;
        padding: 2px 7px;
        border: 1px solid rgba(95, 73, 50, 0.6);
        border-radius: 5px;
      }

      .text h2 {
        font-size: 18px;
        font-weight: normal;
        margin: 0;
      }
      .partie-texte {
        color: rgb(201, 178, 153);
        font-family: var(--font-source);
        line-height: 32px;
        font-size: 24px;
        width: 850px;
        height: 50px;
      }
      .titre {
        display: flex;
        flex-direction: row;
        align-items: flex-start;
        gap: 10px;
      }
      .index {
        font-size: 24px;

        color: rgb(201, 178, 153);
      }
      .index-fleche {
        display: flex;
        align-items: center;
      }
      svg {
        color: rgb(201, 178, 153);
        stroke-width: 3px;
      }
    </style>
  </head>
  <body class="container">
    <div class="partie">
      <div class="titre">
        <div class="index-fleche">
          <p class="index">1</p>
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width="24"
            height="24"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"
          >
            <path d="M5 12h13M12 5l7 7-7 7"></path>
          </svg>
        </div>

        <p class="partie-texte"></p>
      </div>
      <div class="row">
        <!-- Les cartes seront ajoutées ici -->
      </div>
    </div>

    <script>
      let choixCount = 1; // Variable to store the number of choices made, initialized to 1

      function choisirChoix(partieId, choixId) {
        console.log(
          `Fetching data for partieId: ${partieId}, choixId: ${choixId}`
        );

        fetch(`http://localhost:4000/api/histoire/${partieId}/choix/${choixId}`)
          .then((response) => {
            if (!response.ok) {
              throw new Error("Network response was not ok");
            }
            return response.json();
          })
          .then((data) => {
            console.log("Données reçues de l'API :", data);

            document.querySelector(".partie-texte").textContent = data.texte;

            const choixContainer = document.querySelector(".row");
            choixContainer.innerHTML = "";

            if (data.choix && data.choix.length > 0) {
              console.log("Ajout des choix :", data.choix);
              data.choix.forEach((choix, index) => {
                const card = document.createElement("div");
                card.classList.add("square");
                card.style.border = "2px solid rgba(95, 73, 50, 0.6)";
                card.style.borderRadius = "5px";
                card.style.display = "flex";
                card.style.flexDirection = "column";
                card.style.justifyContent = "flex-end";
                card.style.backgroundColor = "#372f26";
                card.style.width = "400px";
                card.style.height = "400px";
                card.style.cursor = "pointer";
                card.style.transition = "all 0.3s ease-in-out";

                const innerSquare = document.createElement("div");
                innerSquare.classList.add("inner-square");
                innerSquare.style.width = "80%";
                innerSquare.style.height = "80%";
                innerSquare.style.padding = "10%";
                innerSquare.style.paddingBottom = "2%";
                innerSquare.style.display = "flex";
                innerSquare.style.justifyContent = "center";
                innerSquare.style.alignItems = "center";

                const image = document.createElement("img");
                image.src = `/images/characters/${choix.image_url}`;
                image.alt = "Votre Image";
                image.style.maxWidth = "100%";
                image.style.maxHeight = "100%";

                innerSquare.appendChild(image);
                card.appendChild(innerSquare);

                const textContainer = document.createElement("div");
                textContainer.classList.add("text");
                textContainer.style.display = "flex";
                textContainer.style.alignItems = "center";
                textContainer.style.justifyContent = "flex-start";
                textContainer.style.paddingLeft = "10px";
                textContainer.style.paddingBottom = "5px";
                textContainer.style.gap = "5px";
                textContainer.style.color = "rgb(201, 178, 153)";
                textContainer.style.fontFamily = "Source Sans Pro, sans-serif";

                const span = document.createElement("span");
                span.textContent = String.fromCharCode(65 + index);
                span.style.fontSize = "18px";
                span.style.lineHeight = "1.1";
                span.style.fontWeight = "bold";
                span.style.background = "#262421";
                span.style.padding = "2px 7px";
                span.style.border = "1px solid rgba(95, 73, 50, 0.6)";
                span.style.borderRadius = "5px";

                card.addEventListener("mouseenter", function () {
                  // Apply styles when mouse enters
                  span.style.color = "#262421";
                  span.style.background = "rgb(201, 178, 153)";
                  span.style.border = "2px solid #262421";

                  card.style.border = "2px solid rgb(201, 178, 153)";
                });

                // Add event listener for mouse leaving the element
                card.addEventListener("mouseleave", function () {
                  // Apply styles when mouse leaves
                  span.style.color = "rgb(201, 178, 153)";
                  span.style.background = "#262421";
                  span.style.border = "1px solid rgba(95, 73, 50, 0.6)";

                  card.style.border = "2px solid rgba(95, 73, 50, 0.6)";
                });

                const h2 = document.createElement("h2");
                h2.textContent = choix.texte;
                h2.style.fontSize = "18px";
                h2.style.fontWeight = "normal";
                h2.style.margin = "0";

                textContainer.appendChild(span);
                textContainer.appendChild(h2);

                card.appendChild(textContainer);
                choixContainer.appendChild(card);

                card.addEventListener("click", () => {
                  if (choix.fin_jeu === 1) {
                    // Si le choix mène à la fin du jeu
                    alert("Le jeu est terminé. Vous êtes mort !");
                    // Vous pouvez également rediriger l'utilisateur vers une autre page
                    localStorage.setItem(
                      "choixFinalId",
                      choix.prochain_partie_id
                    );
                    window.location.href = "/fin-jeu";
                  } else {
                    // Si le choix ne mène pas à la fin du jeu
                    choixCount++; // Increment the number of choices made
                    document.querySelector(".index").textContent =
                      `${choixCount}`; // Update the index paragraph
                    choisirChoix(choix.prochain_partie_id, index);
                    // localStorage.setItem("choixFinalId", partieId);
                    console.log("choixFinalId", choix.prochain_partie_id);
                  }
                });
              });
            } else {
              console.log("Aucun choix disponible.");
            }
          })
          .catch((error) => {
            console.error(
              "Erreur lors de la récupération de la partie suivante de l'histoire :",
              error
            );
          });
      }

      document.addEventListener("DOMContentLoaded", () => {
        // Récupérer le premier texte et choix pour commencer l'histoire
        choisirChoix(1, 0);
      });
    </script>
  </body>
</html>
